{"version":3,"file":"src_app_default-layout_map_map_module_ts.js","mappings":"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","sources":["./src/app/default-layout/map/map-routing.module.ts","./src/app/default-layout/map/map.module.ts","./src/app/default-layout/map/map.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { MapPage } from './map.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MapPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { MapPageRoutingModule } from './map-routing.module';\nimport { MapPage } from './map.page';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder } from '@ionic-native/native-geocoder/ngx';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MapPageRoutingModule\n  ],\n  declarations: [MapPage],\n  providers: [Geolocation, NativeGeocoder],\n})\nexport class MapPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\ndeclare var google;\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.page.html',\n  styleUrls: ['./map.page.scss'],\n})\nexport class MapPage implements OnInit {\n\n  @ViewChild('map', { static: false }) mapElement: ElementRef;\n  map: any;\n  address: string;\n  lat: string;\n  long: string;\n  autocomplete: { input: string; };\n  autocompleteItems: any[];\n  location: any;\n  placeid: any;\n  GoogleAutocomplete: any;\n  geocoder: any;\n  markers: any[];\n  constructor(\n    private geolocation: Geolocation,\n    private activatedRoute: ActivatedRoute,\n    private nativeGeocoder: NativeGeocoder,\n    public zone: NgZone,\n  ) {\n    this.GoogleAutocomplete = new google.maps.places.AutocompleteService();\n    this.autocomplete = { input: '' };\n    this.autocompleteItems = [];\n  }\n\n  ngOnInit() {\n\n    this.loadMap();\n  }\n  ionViewWillEnter() {\n    this.activatedRoute.queryParams.subscribe((params: any) => {\n      console.log(\"adreeeeeeeeeeeeeeeeeees\",params);\n    \n    });\n  }\n  loadMap() {\n    //FIRST GET THE LOCATION FROM THE DEVICE.\n    if (navigator.geolocation) {\n      this.geolocation.getCurrentPosition().then((resp) => {\n        let latLng = new google.maps.LatLng(resp.coords.latitude, resp.coords.longitude);\n        let mapOptions = {\n          center: latLng,\n          zoom: 15,\n          mapTypeId: google.maps.MapTypeId.ROADMAP\n        }\n\n        //LOAD THE MAP WITH THE PREVIOUS VALUES AS PARAMETERS.\n        this.getAddressFromCoords(resp.coords.latitude, resp.coords.longitude);\n        this.map = new google.maps.Map(this.mapElement.nativeElement, mapOptions);\n        this.map.addListener('tilesloaded', () => {\n          console.log('accuracy', this.map, this.map.center.lat());\n          this.getAddressFromCoords(this.map.center.lat(), this.map.center.lng())\n          this.lat = this.map.center.lat()\n          this.long = this.map.center.lng()\n        });\n      }).catch((error) => {\n        console.log('Error getting location', error);\n      });\n    }\n  }\n\n\n  getAddressFromCoords(lattitude, longitude) {\n    console.log(\"getAddressFromCoords \" + lattitude + \" \" + longitude);\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.reverseGeocode(lattitude, longitude, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.address = \"\";\n        let responseAddress = [];\n        for (let [key, value] of Object.entries(result[0])) {\n          if (value.length > 0)\n            responseAddress.push(value);\n        }\n        responseAddress.reverse();\n        for (let value of responseAddress) {\n          this.address += value + \", \";\n        }\n        this.address = this.address.slice(0, -2);\n      })\n      .catch((error: any) => {\n        this.address = \"Address Not Available!\";\n      });\n  }\n\n  //FUNCTION SHOWING THE COORDINATES OF THE POINT AT THE CENTER OF THE MAP\n  ShowCords() {\n    alert('lat' + this.lat + ', long' + this.long)\n  }\n\n  //AUTOCOMPLETE, SIMPLY LOAD THE PLACE USING GOOGLE PREDICTIONS AND RETURNING THE ARRAY.\n  UpdateSearchResults() {\n    if (this.autocomplete.input == '') {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\n      (predictions, status) => {\n        this.autocompleteItems = [];\n        this.zone.run(() => {\n          predictions.forEach((prediction) => {\n            this.autocompleteItems.push(prediction);\n            console.log(\"this.autocompleteItems\",this.autocompleteItems);\n            \n          });\n        });\n      });\n  }\n\n  //wE CALL THIS FROM EACH ITEM.\n  SelectSearchResult(item) {\n    console.log(\"item\",item);\n    \n    ///WE CAN CONFIGURE MORE COMPLEX FUNCTIONS SUCH AS UPLOAD DATA TO FIRESTORE OR LINK IT TO SOMETHING\n    // alert(JSON.stringify(item))      \n    // this.placeid = item.place_id\n  \n    this.autocompleteItems = [];\n    this.geocoder = new google.maps.Geocoder;\n    this.markers = [];\n\n    this.geocoder.geocode({ 'placeId': item.place_id }, (results, status) => {\n      if (status === 'OK' && results[0]) {\n        let position = {\n          lat: results[0].geometry.location.lat,\n          lng: results[0].geometry.location.lng\n        };\n        let marker = new google.maps.Marker({\n          position: results[0].geometry.location,\n          map: this.map,\n        });\n        this.markers.push(marker);\n        this.map.setCenter(results[0].geometry.location);\n      }\n    })\n\n  }\n\n\n  //lET'S BE CLEAN! THIS WILL JUST CLEAN THE LIST WHEN WE CLOSE THE SEARCH BAR.\n  ClearAutocomplete() {\n    this.autocompleteItems = []\n    this.autocomplete.input = ''\n  }\n\n  //sIMPLE EXAMPLE TO OPEN AN URL WITH THE PLACEID AS PARAMETER.\n  GoTo() {\n    return window.location.href = 'https://www.google.com/maps/search/?api=1&query=Google&query_place_id=' + this.placeid;\n  }\n\n}\n\n\n\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
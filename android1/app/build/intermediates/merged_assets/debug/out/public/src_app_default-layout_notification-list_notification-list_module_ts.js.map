{"version":3,"file":"src_app_default-layout_notification-list_notification-list_module_ts.js","mappings":"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","sources":["./src/app/default-layout/notification-list/notification-list-routing.module.ts","./src/app/default-layout/notification-list/notification-list.module.ts","./src/app/default-layout/notification-list/notification-list.page.ts","./src/app/service/rest/rest.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NotificationListPage } from './notification-list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationListPageRoutingModule } from './notification-list-routing.module';\n\nimport { NotificationListPage } from './notification-list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationListPageRoutingModule\n  ],\n  declarations: [NotificationListPage]\n})\nexport class NotificationListPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { LoaderService } from 'src/app/core/services/loader.service';\nimport { RestService } from 'src/app/service/rest/rest.service';\n\n@Component({\n  selector: 'app-notification-list',\n  templateUrl: './notification-list.page.html',\n  styleUrls: ['./notification-list.page.scss'],\n})\nexport class NotificationListPage implements OnInit {\n  page = 1;\n  pageSize = 10;\n  notification: any = [];\n  collection: number = 0;\n  constructor(\n    private spinner: LoaderService,\n    private restService: RestService\n  ) {}\n\n  ngOnInit() {}\n  ionViewWillEnter() {\n    this.getAllStudentNotifications(false);\n  }\n  doRefresh(event) {\n    this.page = 1;\n    this.notification = [];\n    this.getAllStudentNotifications(false);\n    event.target.complete();\n  }\n  doInfinite(event) {\n    this.page++;\n    this.getAllStudentNotifications(true, event);\n    event.target.complete();\n  }\n  getAllStudentNotifications(isFirstLoad: boolean, event?: any) {\n    this.spinner.showLoader();\n    this.restService\n      .getAllShopNotifications(this.page, this.pageSize)\n      .subscribe((success) => {\n        this.notification = [\n          ...this.notification,\n          ...success.notificationDetails,\n        ];\n        this.collection = success.count;\n        if (isFirstLoad) event?.target.complete();\n        if (this.notification.length >= this.collection && event) {\n          event.target.disabled = true;\n        }\n        this.spinner.hideLoader();\n      });\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApiService } from 'src/app/core/services';\n@Injectable({\n  providedIn: 'root',\n})\nexport class RestService {\n  routes: any = {\n    getAllCustomerDashBoardPath: (id: any) =>\n      `customer/getAllCustomerDashBoard`,\n    getAllAsmBySubTopicId: (id: any) =>\n      `assignment/getAllAssignmentBySubTopicId/${id}`,\n    getAllTopicVideoBySubTopicId: (id: any) =>\n      `topicVideo/getAllTopicVideoBySubTopicId/${id}`,\n    getTopicVideoDetailsById: (id: any) =>\n      `topicVideo/getTopicVideoDetailsById/${id}`,\n    getAllTopicVideoByBatchId: (id: any) =>\n      `topicVideo/getAllTopicVideoByBatchId/${id}`,\n    selectAllTopicByCourseId: (id: any) =>\n      `topic/selectAllTopicByCourseId/${id}`,\n    getAllAssignmentByBatchId: (id: any) =>\n      `assignment/getAllAssignmentByBatchId/${id}`,\n    getAllShopNotifications: (page, pageSize) =>\n      `notification/getAllShopNotifications?page=${page}&pageSize=${pageSize}`,\n  };\n  constructor(private http: ApiService, private httpClient: HttpClient) {}\n\n  getAllAssignmentByBatchId(id) {\n    return this.http.get(this.routes.getAllAssignmentByBatchId(id));\n  }\n\n  getAllTopicByCourseId(id) {\n    return this.http.get(this.routes.selectAllTopicByCourseId(id));\n  }\n  getAllAssignmentBySubTopicId(id) {\n    return this.http.get(this.routes.getAllAsmBySubTopicId(id));\n  }\n  getAllTopicVideoBySubTopicId(id) {\n    return this.http.get(this.routes.getAllTopicVideoBySubTopicId(id));\n  }\n  getAllAssignmentById(id) {\n    return this.http.get(this.routes.getAsmByIdPath(id));\n  }\n  getAllTopicVideoById(id) {\n    return this.http.get(this.routes.getTopicVideoDetailsById(id));\n  }\n  getAllShopNotifications(page, pageSize) {\n    return this.http.get(this.routes.getAllShopNotifications(page, pageSize));\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
{"version":3,"file":"src_app_auth-layout_change-pwd_change-pwd_module_ts.js","mappings":"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","sources":["./src/app/auth-layout/change-pwd/change-pwd-routing.module.ts","./src/app/auth-layout/change-pwd/change-pwd.module.ts","./src/app/auth-layout/change-pwd/change-pwd.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChangePwdPage } from './change-pwd.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ChangePwdPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ChangePwdPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ChangePwdPageRoutingModule } from './change-pwd-routing.module';\nimport { ChangePwdPage } from './change-pwd.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ValidationMessagesPageModule } from 'src/app/core/validation-messages/validation-messages.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ChangePwdPageRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    ValidationMessagesPageModule\n  ],\n  declarations: [ChangePwdPage]\n})\nexport class ChangePwdPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoaderService } from 'src/app/core/services/loader.service';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { StorageService } from 'src/app/core/services';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ValidationService } from '../../../app/core/validation-messages/validation-messages.service';\n@Component({\n  selector: 'app-change-pwd',\n  templateUrl: './change-pwd.page.html',\n  styleUrls: ['./change-pwd.page.scss'],\n})\nexport class ChangePwdPage implements OnInit {\n  showOld = false;\n  showNew = false;\n  showConfirm = false;\n  submitted: boolean = false;\n  loaded: boolean = true;\n  passForm = this.formBuilder.group(\n    {\n      oldPassword: new FormControl(null, [Validators.required]),\n      newPassword: new FormControl(null, [Validators.required]),\n      confirmPass: new FormControl(null, [Validators.required]),\n      id: new FormControl(null),\n    },\n    {\n      validator: this.validationService.MustMatch('newPassword', 'confirmPass'),\n    }\n  );\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private location: Location,\n    private auth: AuthService,\n    private spinner: LoaderService,\n    private toaster: ToastService,\n    private localStorage: StorageService,\n    public translate: TranslateService,\n    private validationService: ValidationService\n  ) { }\n\n  ngOnInit() { }\n  ionViewWillEnter() {\n    this.passForm.controls.id.setValue(this.localStorage.get('OBCustomer').id);\n  }\n  ngOnDestroy() { }\n\n  get form() {\n    return this.passForm.controls;\n  }\n\n\n\n  // directly update password -- only for super admin\n  setPassword() {\n    // if (!this.isMatch) {\n    // this.translate.get('changePassPage.error.notMatch').subscribe((msg) => {\n    //   this.errorMsg = msg;\n    // });\n    //   return;\n    // }\n    this.submitted = true;\n    if (this.passForm.invalid) {\n      this.toaster.presentToast('warning', 'Please fill all valid field !');\n      return;\n    }\n    this.loaded = false;\n    this.auth.resetPassword(this.passForm.value).subscribe((success: any) => {\n      this.loaded = true;\n      this.passForm.reset();\n      this.toaster.successToast('Password Change done successfully !!');\n      this.router.navigate(['/login']);\n    });\n  }\n  goBack() {\n    this.location.back();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}